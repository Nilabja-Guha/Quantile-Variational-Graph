 
 library(GGMselect)
library(lars)
library(igraph)
library(network)

library(MASS)
library(huge)
library(quantreg)
 ################################################
## Non Gaussian example
################################################
## data generation
 set.seed(100)
 n<-400
  p1<-10
  p2<-3
  p3<-2
  sigmat1<-matrix(0,p1,p1)
  sigmat2<-matrix(0,p1,p1)
  
  for(i in 1:p1)
  {for(j in 1:p1)
  {
    
    sigmat1[i,j]<-.9^abs((i-j))
  }
    
  }
  
  p1<-10
  p2<-3
  
  for(i in 1:p1)
  {for(j in 1:p1)
  {
    
    sigmat2[i,j]<-.7^abs((i-j))
  }
    
  }
  #n<-900
  X1<-matrix(0,n,p1)
  X2<-matrix(0,n,p1)
  X3<-matrix(0,n,p3)
  idp1<-diag(c(1:p1)-c(1:p1)+1)
  invmat<-solve(sigmat2,idp1)
  riv<-c(1:n)
  X1nn<-X1
  for(i in 1:n)
  {
    rii<-1/rgamma(p1,3,3)
    ri<-1/rgamma(1,3,3)
    riv[i]<-ri
   
    
     X1[i,]<-mvrnorm(1,(c(1:p1)-c(1:p1)),sigmat2)*ri

    
  }
  
  
  
  
  
  
  #X1[,c(3,5,7)]<-X1[i,c(3,5,7)]<-qexp((1/(1+exp(-X1[i,c(3,5,7)]))))
  errorind<-rbinom(n,1,.3)
  
  for(i in 1:n)
  {
    X2[i,]<-mvrnorm(1,(c(1:p1)-c(1:p1)),2*sigmat2)
    X2[i,]<-qexp(1/(1+exp(-X2[i,])))+.7*rt(p1,10)
  }
  
  
  X21<-matrix(runif((p1*n)),n,p1)-.5
  
  X21[,1]<-3*X1[,3]+2*X1[,5]+errorind*rnorm(n)*3+(1-errorind)*rnorm(n)
  
  X21[,2]<-3*X1[,6]+2*X1[,7]+rnorm(n)*3
  X21[,3:10]<-X1[,3:10]
  
  
  errorind<-rbinom(n,1,.5)
  
  X10<-(matrix(rexp(p1*n),n,p1)-1)
  X10<-(matrix(rgamma(p1*n,1,.1),n,p1)-10)
  #X10<-(matrix(runif(p1*n),n,p1)-.5)
  X11<-X10
  
  X10[,2]<-.4*X10[,1]+rnorm(n)
   
  X10[,7]<-rnorm(n)+ qnorm(exp(X10[,2])/(1+exp(X10[,2])))
  
  
  X10[,6]<-1.1*X10[,1]+4*X10[,4]+1.3*X10[,9]+errorind*(rnorm(n)+2)+(1-errorind)*(rnorm(n)-2)
  
  Xind<-matrix(rnorm(n*(10)),n,10)
    
  
  X3<-cbind(X10,X1,Xind[,1:9],log(riv))
  
    mn<-apply(X3,2,mean)
  std<-apply(X3,2,sd)
  X31<-t((t(X3)-mn)/std)
 
 #####################################################################
  thetavec<-c(.5)## quantile grid

pr_var<-1
  
gridvec<-.5

 outmat<-quantile_networkvec_bic(X31,thetavec,gridvec,pr_var,vbs_it)

################################################################


###QVB graph

######################################################
  p2<-ncol(X31)
  graphcon2<-outmat[,1:p2]
  
  diag(graphcon2)<-c(1:p2)-c(1:p2)
  
    gr2<-as.matrix(huge.select(huge(X31),criterion="stars")$refit)
  gr3<-as.matrix(huge.select(huge(X31))$refit)


    gr11<-graph_from_adjacency_matrix(graphcon2[1:29,1:29],mode=c("undirected"))
    
      gr12<-graph_from_adjacency_matrix(gr2[1:29,1:29],mode=c("undirected"))

      gr13<-graph_from_adjacency_matrix(gr3[1:29,1:29],mode=c("undirected"))


par(mfrow=c(1,3))
plot(gr11,main="QVB")
plot(gr12,main="GGM")
plot(gr13,main="GGM")

  
  #####################################################################################################
  
  
  ###########Gaussian hub graph
#############################################################################################  

  L = huge.generator(n=300,d=50,graph = "hub", g = 3)
plot(L)

X3<-L$data
  mn<-apply(X3,2,mean)
  std<-apply(X3,2,sd)
  X31<-t((t(X3)-mn)/std)
 ####  Data generation

############################################
 thetavec<-c(.3,.5,.7)## quantile grid
 
 outmat<-quantile_networkvec_bic(X31,thetavec,gridvec,pr_var,vbs_it)

################ QVB graph 
  p2<-ncol(X31)
  graphcon2<-outmat[,1:p2]
  
    diag(graphcon2)<-c(1:p2)-c(1:p2)

gr2<-as.matrix(huge.select(huge(X31),criterion="stars")$refit)
  gr3<-as.matrix(huge.select(huge(X31))$refit)
  
 


    gr11<-graph_from_adjacency_matrix(graphcon2,mode=c("undirected"))
    
      gr12<-graph_from_adjacency_matrix(gr2,mode=c("undirected"))

      gr13<-graph_from_adjacency_matrix(gr3,mode=c("undirected"))
      
      
      
par(mfrow=c(1,3))
plot(gr11,main="QVB")
plot(gr12,main="GGM")
plot(gr13,main="GGM")




##################################################################
#######Gaussian Banded inverse covariance matrix
###################################################################






library(gplots)
  L = huge.generator(n=300,d=50,graph = "band", g = 3)
plot(L)

X3<-L$data
  mn<-apply(X3,2,mean)
  std<-apply(X3,2,sd)
  X31<-t((t(X3)-mn)/std)
 
## data generation 

###########################################
# thetavec<-c(.3,.5,.7)
 
  thetavec<-c(.5)  ## quantile grid

 
 outmat<-quantile_networkvec_bic(X31,thetavec,gridvec,pr_var,vbs_it)
  p2<-ncol(X31)
  graphcon2<-outmat[,1:p2]
  
    diag(graphcon2)<-c(1:p2)-c(1:p2)

gr2<-as.matrix(huge.select(huge(X31),criterion="stars")$refit)
  gr3<-as.matrix(huge.select(huge(X31))$refit)
   m_qvb<-graphcon2
  m_ggm<-gr2
  m_ggm2<-gr3


 col2<- colorRampPalette(c( "white", "black"))(256)
 
 
heatmap.2(abs(m_qvb), scale="none", Rowv=NA, Colv=NA,dendrogram = "none",col=col2,trace="none")

 heatmap.2(abs(m_ggm2), scale="none", Rowv=NA, Colv=NA,dendrogram = "none",col=col2,trace="none")
 
